31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L,
44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L,
57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L,
1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L,
15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L,
28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L,
41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L,
54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L,
67L, 68L, 69L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L,
12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L,
25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L,
38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L,
51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L,
64L, 65L, 66L, 67L, 68L, 69L, 1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L,
9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L,
22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L,
35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L,
48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L,
61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L), .Label = c("21906057-21916057",
"21916057-21926057", "21976057-21986057", "21986057-21996057",
"22006057-22016057", "22016057-22026057", "22036057-22046057",
"22046057-22056057", "22056057-22066057", "22066057-22076057",
"22076057-22086057", "22096057-22106057", "22106057-22116057",
"22116057-22126057", "22126057-22136057", "22136057-22146057",
"22146057-22156057", "22156057-22166057", "22166057-22176057",
"22176057-22186057", "22186057-22196057", "22196057-22206057",
"22206057-22216057", "22226057-22236057", "22236057-22246057",
"22246057-22256057", "22256057-22266057", "22306057-22316057",
"22316057-22326057", "22326057-22336057", "22336057-22346057",
"22346057-22356057", "22356057-22366057", "22366057-22376057",
"22426057-22436057", "22436057-22446057", "22446057-22456057",
"22466057-22476057", "22476057-22486057", "22506057-22516057",
"22516057-22526057", "22526057-22536057", "22536057-22546057",
"22546057-22556057", "22556057-22566057", "22566057-22576057",
"22576057-22586057", "22586057-22596057", "22596057-22606057",
"22606057-22616057", "22616057-22626057", "22626057-22636057",
"22636057-22646057", "22646057-22656057", "22686057-22696057",
"22726057-22736057", "22736057-22746057", "22746057-22756057",
"22806057-22816057", "22816057-22826057", "22826057-22836057",
"22836057-22846057", "22866057-22876057", "22876057-22886057",
"22886057-22896057", "22896057-22906057", "22906057-22916057",
"22916057-22926057", "22956057-22966057"), class = "factor"),
variable = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L,
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L,
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L,
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L,
3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L,
3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L,
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L,
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L,
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L,
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L), .Label = c("gene1", "gene2", "gene3",
"gene4", "gene5"), class = "factor"), value = c(0L, 3L, 0L,
0L, 0L, 0L, 43L, 0L, 0L, 0L, 0L, 0L, 0L, 56L, 56L, 31L, 31L,
31L, 31L, 5L, 11L, 11L, 11L, 1L, 24L, 9805L, 72L, 74L, 74L,
74L, 74L, 74L, 74L, 74L, 2187L, 0L, 40L, 54L, 54L, 5L, 5L,
5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 1L, 62L,
62L, 1L, 26L, 26L, 26L, 3L, 40L, 40L, 6L, 6L, 6L, 6L, 200L,
0L, NA, NA, NA, NA, 0L, 49L, NA, NA, 0L, NA, 0L, 0L, NA,
36L, NA, 1L, 54L, 54L, NA, NA, NA, NA, NA, 0L, 72L, NA, NA,
NA, NA, 0L, NA, NA, NA, 6L, 40L, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 0L, NA, NA, NA, 1L,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 60L, NA, NA,
NA, NA, NA, 0L, NA, NA, NA, NA, NA, NA, NA, NA, 0L, NA, NA,
NA, 5L, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, 0L, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, 12L, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, 31L, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), exp = c("Extremely low",
"Very Low", "Extremely low", "Extremely low", "Extremely low",
"Extremely low", "Moderately high", "Extremely low", "Extremely low",
"Extremely low", "Extremely low", "Extremely low", "Extremely low",
"High", "High", "Moderately high", "Moderately high", "Moderately high",
"Moderately high", "Low", "Moderate", "Moderate", "Moderate",
"Very Low", "Moderate", "Extremely high", "High", "High",
"High", "High", "High", "High", "High", "High", "Extremely high",
"Extremely low", "Moderately high", "High", "High", "Low",
"Low", "Low", "Low", "Low", "Low", "Low", "Low", "Low", "Low",
"Low", "Low", "Low", "Low", "Low", "Very Low", "High", "High",
"Very Low", "Moderately high", "Moderately high", "Moderately high",
"Very Low", "Moderately high", "Moderately high", "Low",
"Low", "Low", "Low", "Very high", "Extremely low", NA, NA,
NA, NA, "Extremely low", "Moderately high", NA, NA, "Extremely low",
NA, "Extremely low", "Extremely low", NA, "Moderately high",
NA, "Very Low", "High", "High", NA, NA, NA, NA, NA, "Extremely low",
"High", NA, NA, NA, NA, "Extremely low", NA, NA, NA, "Low",
"Moderately high", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, "Extremely low", NA, NA, NA, "Very Low",
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "High", NA, NA,
NA, NA, NA, "Extremely low", NA, NA, NA, NA, NA, NA, NA,
NA, "Extremely low", NA, NA, NA, "Low", NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "Extremely low",
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, "Moderate", NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "Moderately high",
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA)), .Names = c("coord",
library(ggplot2)                                                                                                                                                                                                                                    "variable", "value", "exp"), row.names = c(NA, -345L), class = "data.frame")
library(ggplot2)
test[is.na(test)] <- 0
q<-ggplot(test, aes(x=coord, y=value, fill=factor(exp))) + geom_bar(aes(fill=exp),stat="identity",position = "dodge", colour="black")+theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))+scale_y_continuous(trans = "log10")
q
devtools::install_github("patilv/gudatavizfa16",auth_token="5ad63b9d88930b829c805694d156bc03e5e60174")
gudatavizfa16::opendataviz()
gudatavizfa16::updatedataviz()
devtools::install_github("htmlwidgets/sparkline")
shiny::runApp('GUMaps-IADashboard')
gudatavizfa16::opendataviz()
plot(cars)
devtools::install_github("rstudio/leaflet@joe/feature/crosstalk-filter")
library(crosstalk)
library(leaflet)
sd <- SharedData$new(quakes)
leaflet(sd) %>% addMarkers()
devtools::install_github("rstudio/DT@joe/feature/crosstalk")
devtools::install_github("ropensci/plotly@joe/feature/crosstalk")
devtools::install_github("ropensci/plotly@joe/feature/crosstalk")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("tidyr")
devtools::install_github("ropensci/plotly@joe/feature/crosstalk")
install.packages("htmltools")
library(htmltools)
library(crosstalk)
library(leaflet)
library(DT)
# Wrap data frame in SharedData
sd <- SharedData$new(quakes)
# Create a filter input
filter_slider("mag", "Magnitude", sd, column = ~mag, step = 0.1)
leaflet(sd) %>% addTiles() %>% addMarkers()
datatable(sd)
# Wrap data frame in SharedData
sd <- SharedData$new(quakes)
# Create a filter input
filter_slider("mag", "Magnitude", sd, column = ~mag, step = 0.1)
# Use SharedData like a dataframe with Crosstalk-enabled widgets
leaflet(sd) %>% addTiles() %>% addMarkers()
datatable(sd)
sd <- SharedData$new(iris)
renderPlot({
df <- sd$data(withSelection = TRUE, withFilter = TRUE)
ggplot(df, aes(Sepal.Length, Sepal.Width,
color = selection_factor(df))) +
geom_point() +
scale_color_selection("#444444", "skyblue1")
})
datatable(sd)
tags$div(
style = "display: flex; flex-wrap: wrap",
tagList(
list(
tags$div(p1, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p2, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p3, style = "width: 100%; padding: 1em; border: solid;")
)
)
)
# Create a filter input
p1=filter_slider("mag", "Magnitude", sd, column = ~mag, step = 0.1)
# Use SharedData like a dataframe with Crosstalk-enabled widgets
p2=leaflet(sd) %>% addTiles() %>% addMarkers()
p3=datatable(sd)
tags$div(
style = "display: flex; flex-wrap: wrap",
tagList(
list(
tags$div(p1, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p2, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p3, style = "width: 100%; padding: 1em; border: solid;")
)
)
)
library(crosstalk)
library(leaflet)
sd <- SharedData$new(quakes)
leaflet(sd) %>% addMarkers()
library(htmltools)
library(crosstalk)
library(leaflet)
library(DT)
# Wrap data frame in SharedData
sd <- SharedData$new(quakes)
# Create a filter input
p1=filter_slider("mag", "Magnitude", sd, column = ~mag, step = 0.1)
# Use SharedData like a dataframe with Crosstalk-enabled widgets
p2=leaflet(sd) %>% addTiles() %>% addMarkers()
p3=datatable(sd)
tags$div(
style = "display: flex; flex-wrap: wrap",
tagList(
list(
tags$div(p1, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p2, style = "width: 50%; padding: 1em; border: solid;"),
tags$div(p3, style = "width: 100%; padding: 1em; border: solid;")
)
)
)
devtools::install_github("hrbrmstr/markdowntemplates")
library(readxl)
library(stringr)
library(ggplot2)
library(dplyr)
load("importancevarsnona.Rda")
set.seed(123)
kmeansdata=kmeans(importancevarsnona[,1:30],2)  # generating 4 clusters
meanvars=aggregate(importancevarsnona[,1:30],by=list(kmeansdata$cluster),FUN=mean) # get cluster means
set.seed(123)
kmeansdata=kmeans(importancevarsnona[,1:30],2)  # generating 4 clusters
meanvars=aggregate(importancevarsnona[,1:30],by=list(kmeansdata$cluster),FUN=mean) # get cluster means
importancevarsnona$clusternumber=kmeansdata$cluster
table(importancevarsnona$clusternumber)
library(tidyr)
df=gather(meanvars,Group, Issue,2:31)
View(df)
ggplot(df,aes(Group,Issue,color=as.factor(Group.1)))+geom_line()+coord_flip()
str(df)
names(df)=c("Group","Issue","Mean")
str(df)
df$Group=factor(df$Group)
str(df)
ggplot(df,aes(Group,Issue,color=Group.1))+geom_line()+coord_flip()
ggplot(df,aes(Issue,Mean,color=Group))+geom_line()+coord_flip()
ggplot(df,aes(Issue,Mean,color=Group))+geom_line(group="Issue")+coord_flip()
ggplot(df,aes(Issue,Mean,color=Group))+geom_line(group="Group")+coord_flip()
ggplot(df,aes(Issue,Mean,color=Group,group=Group))+geom_line()+coord_flip()
install.packages("plotly")
install.packages("flexdashboard", type = "source")
devtools::install_github("patilv/gudatavizfa16",auth_token="7910f2edc06a588b38c0d6903078171fb246692f")
library(gudatavizfa16)
library(ggplot2)
library(dplyr)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point(aes(shape = Species), size = 3)
ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species,shape = Species)) +
geom_point(size = 3)
head(diamonds)
head(diamonds)
head(ggplot2::diamonds)
diamonds=ggplot2::diamonds
head(diamonds)
set.seed(1)
d2 <- diamonds[sample(1:dim(diamonds)[1], 1000), ]
ggplot(d2,aes(x=carat,y=price,color=color))+geom_point()
ggplot(d2,aes(x=carat,y=price,color=carat))+geom_point()
ggplot(d2,aes(x=carat,y=price,color=as.factor(carat)))+geom_point()
?MASS
library(MASS)
?MASS
?birthwt
head(birthwt)
?faithful
h <- ggplot(faithful, aes(x = waiting))
h + geom_histogram(binwidth = 8, fill = "steelblue",
colour = "black")
h + geom_histogram(binwidth = 8, fill = "red",
colour = "white")
ggplot(faithful,aes(x=waiting,y=eruptions))+geom_point() +geom_smooth(method="lm")
ggplot(faithful,aes(x=waiting,y=eruptions))+geom_point() +geom_smooth()
?geom_smooth
ggplot(d2,aes(x=carat,y=price,color=color))+geom_point()
ggplot(d2,aes(x=carat,y=price,color=color))+geom_point()+geom_smooth(method="lm")
ggplot(d2,aes(x=carat,y=price))+geom_point(aes(color=color))+geom_smooth(method="lm")
head(d2)
ggplot(d2,aes(x=carat,y=price))+geom_point(aes(color=color))+geom_smooth(method="lm")
ggplot(d2,aes(x=carat,y=price))+geom_point(aes(color=color))+geom_smooth(method="lm")+ theme_bw()
gudatavizfa16::tallestbuildings
gudatavizfa16::opendataviz()
suppressPackageStartupMessages(library(knitr))
M1=gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=500, height=350))
suppressPackageStartupMessages(library(googleVis))
M1=gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=500, height=350))
M1
plot(M1)
devtools::install_github("patilv/gudatavizfa16",auth_token="7910f2edc06a588b38c0d6903078171fb246692f")
library(gudatavizfa16)
opendataviz()
op <- options(gvis.plot.tag='chart')
devtools::install_github("patilv/gudatavizfa16",auth_token="ad434b254f48fab14898a3ec6f8a01307af0eab7")
library(gudatavizfa16)
opendataviz()
devtools::install_github("patilv/gudatavizfa16",auth_token="ad434b254f48fab14898a3ec6f8a01307af0eab7")
library(gudatavizfa16)
opendataviz()
install.packages("survey")
library(survey)
data(api)
head(apisrs)
names(apisrs)
summary(apisrs)
srs_design=svydesign(id=~1, fpc=~fpc,data=apisrs)
srs_design
svytotal(~enroll,srs_design)
sd(apisrs$enroll)
svymean(~enroll,srs_design)
mean(apisrs$enroll)
sd(apisrs$enroll)
svytotal(~enroll,srs_design)
cumsum(apisrs$enroll)
sum(apisrs$enroll)
sum(apisrs$enroll)*apisrs$fpc/nrow(apisrs)
mean(apisrs$enroll)*apisrs$fpc/nrow(apisrs)
mean(apisrs$enroll)*apisrs$fpc/nrow(apisrs)
sum(apisrs$enroll)*apisrs$fpc/nrow(apisrs)
nofpc=svydesign(id=~1,weights=~pw,data=apisrs)
nofpc
svytotal(~enroll,nofpc)
svymean(~enroll,nofpc)
svymean(~stype,srs_design)
svytotal(~stype,srs_design)
table(apisrs$stype)
prop.table(apisrs$stype)
(apisrs$stype)*6194/200
table(apisrs$stype)*6194/200
svytotal(~stype,srs_design)
prop.table(table(apisrs$stype))
svymean(~stype,srs_design)
means=svymean(~api00+api99,srs_design)
means
svycontrast(means,c(api00=1,api99=-1))
devtools::install_github("patilv/gudatavizfa16",auth_token="ad434b254f48fab14898a3ec6f8a01307af0eab7")
library(gudatavizfa16)
opendataviz()
rmarkdown::shiny_prerendered_clean('C:/Users/Vivek/OneDrive/Documents/marketing research/FA16/FinalExam-Datasets.Rmd')
unlink('C:/Users/Vivek/OneDrive/Documents/marketing research/FA16/FinalExam-Datasets_cache', recursive = TRUE)
install.packages("sand")
sand::install_sand_packages()
shiny::runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
runApp('shinysparks')
unlink('~/GitHub/patilv.github.io/viZag-evals/index_cache', recursive = TRUE)
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr updateR(F, T, T, F, T, F, T)
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr updateR(F, T, T, F, T, F, T)
if(!require("installr")) install.packages('installr')
library("installr")
updateR(F, T, T, F, T, F, T)
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
library(gudatavizfa17)
updatedataviz()
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
getwd()
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
install.packages("tidyverse")
library(ggplot2)
library(dplyr)
library(tidyr)
?mpg
head(mpg)
ggplot(mpg,aes(displ,hwy))+geom_point()+
facet_grid(class ~ .)
ggplot(mpg,aes(displ,hwy))+geom_point()+
facet_grid(class ~ .,scales="free")
ggplot(mpg,aes(displ,hwy))+geom_point()+
facet_grid(.~class,scales="free")
ggplot(mpg,aes(displ,hwy))+geom_point()+
facet_grid(.~class,scales="free",size=3)
ggplot(mpg,aes(displ,hwy))+geom_point(size=3)+
facet_grid(.~class,scales="free")
devtools::install_github("patilv/gudatavizfa17",auth_token="155ee13c1b35de529daaf5c0761584b57b9f5b6b")
library(gudatavizfa17)
opendataviz()
shiny::runApp('GUSERVERAPPS/viZag-evals')
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
set.seed(123)
datHist=data.frame(A=rpois(100, 20),
B=rpois(100, 5),
C=rpois(100, 50))
View(datHist)
head(datHist)
install.packages("googleVis")
library(googleVis)
Hist <- gvisHistogram(datHist, options=list(
legend="{ position: 'right', maxLines: 2 }",
colors="['#5C3292', '#1A8763', '#871B47']",
width=850, height=360))
plot(Hist)
Hist <- gvisHistogram(datHist)
plot(Hist)
print(Hist,file="hist.html")
getwd()
library(gudatavizfa17)
library(gudatavizfa17)
library(gudatavizfa16)
head(bcities)
bestcities=bcities
View(bestcities)
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
install.packages("ggplot2")
install.packages("ggplot2")
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
devtools::install_github("patilv/gudatavizfa17",auth_token="d183f669695ecf83cd0bf2875db10f9fe195acde")
?ggplot2::mpg
?mpg
?mtcars
summary(cars)
library(d3heatmap)
d3heatmap(mtcars,scale="column")
library(plotly)
ggplot(mtcars,aes(x=mpg,y=qsec))+geom_point()
mymtcarsplot=ggplot(mtcars,aes(x=mpg,y=qsec))+geom_point()
ggplotly(mtcarsplot)
ggplotly(mymtcarsplot)
install.packages("babynaes")
install.packages("babynames")
head(mtcars)
install.packages(c("blogdown", "geosphere", "glmmTMB", "glue", "lubridate", "openssl", "proxy", "quantreg", "R.utils", "rgdal", "rgeos", "rlang", "robustbase", "servr", "sf", "sjmisc", "tidyselect"))
thingstodo=read.table(text="
Attraction  lat lon  Population
Jepson  47.667268 -117.405114 45
Starbucks  47.669088 -117.396847  50
WSU 47.660960 -117.405697 250
EWU 47.661061 -117.404044 400",header=TRUE)
View(thingstodo)
install.packages("ggmap")
suppressMessages(library(ggmap))
geocode("502 E Boone Ave, Spokane, WA")
whatislatlon=function(mydata,addressindata){
locs=geocode(as.character(unique(mydata[,addressindata])))
locs$address=unique(mydata[,addressindata])
mydata$latitude=locs$lat[ match(mydata[,addressindata],locs$address)]
mydata$longitude=locs$lon[ match(mydata[,addressindata],locs$address)]
return(mydata)
}
Address=c("502 E Boone Ave, Spokane, WA, 99258","502 E Boone Ave, Spokane, WA, 99258")
mydummydata=data.frame(Address=Address)
mydummydata
mysmartdata=whatislatlon(mydummydata,"Address")
mysmartdata
location=c(-117.402209,47.665330)
map=get_map(location=location,maptype="roadmap",source="google",zoom=16)
ggmap(map)
map=get_map(location=location,maptype="roadmap",source="google",zoom=25)
ggmap(map)
map=get_map(location=location,maptype="roadmap",source="google",zoom=2)
ggmap(map)
map=get_map(location=location,maptype="roadmap",source="google",zoom=16)
ggmap(map)
spokanemap=ggmap(map)
print(spokanemap)
spokanemap=spokanemap+geom_point(data=thingstodo,
aes(lon,lat,color=Attraction),size=5)
print(spokanemap)
?get_map
map=get_map(location=location,maptype="roadmap",source="osm",zoom=16)
spokanemap=ggmap(map)
print(spokanemap)
map=get_map(location=location,maptype="roadmap",source="stamen",zoom=16)
spokanemap=ggmap(map)
print(spokanemap)
map=get_map(location=location,source="stamen",zoom=16)
spokanemap=ggmap(map)
print(spokanemap)
library(leaflet) #rstudio package
leaflet() %>% addTiles()
shiny::runApp('C:/Users/Vivek/OneDrive/Documents/DataViz/gudatavizfa17/inst/09shiny/shinyUI')
update.packages("shiny")
install.packages(c("broom", "car", "coin", "d3r", "ggeffects", "hms", "Matrix", "mclust", "Rcpp", "RcppEigen", "rgdal", "rmarkdown", "sjmisc", "sjstats", "stringi", "tm"))
shiny::runApp('C:/Users/Vivek/OneDrive/Documents/DataViz/gudatavizfa17/inst/09shiny/shinyUI')
setwd("C:/Users/Vivek/OneDrive/Documents/DataViz/gudatavizfa17/inst/09shiny/shinyUI")
runApp()
shiny::runApp()
shiny::runApp()
runApp('C:/Users/Vivek/OneDrive/Documents/DataViz/gudatavizfa17/inst/09shiny/shinyApp')
